#!/bin/bash

source ${_TDX_LAYERS_DIR}/poky/oe-init-build-env "${1:-build-$DISTRO}"

if ! grep -q "# Torizon" conf/local.conf; then
  sed -i "/^MACHINE .*/c\MACHINE ?= '$MACHINE'" conf/local.conf
  sed -i "/^DISTRO .*/c\DISTRO ?= '$DISTRO'" conf/local.conf

  _TDX_OEROOT=$(dirname "$(pwd)")
  _TDX_BUILDDIR=$(pwd)
  cat <<EOF >>conf/local.conf
# Where to store sources
DL_DIR ?= "${_TDX_OEROOT}/downloads"

# Where to save shared state
SSTATE_DIR ?= "${_TDX_OEROOT}/sstate-cache"

# Where to save the build system work output
TMPDIR = "${_TDX_BUILDDIR}/tmp"

# Where to save the packages and images
TI_COMMON_DEPLOY = "${_TDX_BUILDDIR}/deploy"
DEPLOY_DIR = "\${TI_COMMON_DEPLOY}\${@'' if d.getVar('BB_CURRENT_MC') == 'default' else '/\${BB_CURRENT_MC}'}"

# Accept Synaptics FW license
LICENSE_FLAGS_ACCEPTED = "synaptics-killswitch"

# ease up disk space requirements
INHERIT += "rm_work"

# Torizon
include conf/machine/include/\${MACHINE}.inc
EOF
fi

if ! grep -q "# Torizon" conf/bblayers.conf; then
  cat <<EOF >>conf/bblayers.conf
OEROOT := "\${@os.path.abspath(os.path.dirname(d.getVar('FILE', True)))}/../.."

# Intel
BBLAYERS += "\${OEROOT}/layers/meta-intel"
# Torizon
BBLAYERS += "\${OEROOT}/layers/meta-toradex-torizon"
# Torizon deps
BBLAYERS += "\${OEROOT}/layers/meta-updater"
BBLAYERS += "\${OEROOT}/layers/meta-virtualization"
# meta-updater and meta-virtualization deps
BBLAYERS += "\${OEROOT}/layers/meta-openembedded/meta-filesystems"
BBLAYERS += "\${OEROOT}/layers/meta-openembedded/meta-python"
BBLAYERS += "\${OEROOT}/layers/meta-openembedded/meta-oe"
BBLAYERS += "\${OEROOT}/layers/meta-openembedded/meta-networking"
EOF
fi

cat <<EOF

Welcome to Common Torizon OS

For more information about OpenEmbedded see their website:

    http://www.openembedded.org/

Your build environment has been configured with:

    MACHINE = ${MACHINE}
    DISTRO = ${DISTRO}

You can now run 'bitbake <target>'

Some of common targets are:

    torizon-docker
    torizon-minimal
    torizon-podman

EOF
